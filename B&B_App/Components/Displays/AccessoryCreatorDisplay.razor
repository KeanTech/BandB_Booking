
<MudGrid>
    <MudItem xs="12">
        <MudText>
            Room Accessories
        </MudText>
    </MudItem>
    @foreach (var item in RoomAccessories)
    {
        if (AbleToDelete)
        {
            <MudItem xs="2">
                <MudButton ButtonType="ButtonType.Button" Size="Size.Small" Variant="Variant.Filled" IconSize="Size.Small" Color="Color.Error" StartIcon="@Icons.Material.Filled.Delete" @onclick="() => DeleteAccessory(item.Id)">@item.Type.ToString()</MudButton>
            </MudItem>
        }
        else
        {
            <MudItem xs="2">
                <MudButton ButtonType="ButtonType.Button" Size="Size.Small" Variant="Variant.Filled" Color="Color.Surface">@item.Type.ToString()</MudButton>
            </MudItem>
        }

    }
</MudGrid>


@code {
    [Parameter]
    public List<RoomAccessory> RoomAccessories { get; set; } = new List<RoomAccessory>();

    [Parameter]
    public EventCallback<RoomAccessory> ItemDeleted { get; set; }

    [Parameter]
    public bool AbleToDelete { get; set; } = true;

    private void DeleteAccessory(int id)
    {
        if (AbleToDelete)
        {
            var selectedAccessory = RoomAccessories.FirstOrDefault(x => x.Id == id);
            if (selectedAccessory == null)
                return;

            ItemDeleted.InvokeAsync(selectedAccessory);
            RoomAccessories.Remove(selectedAccessory);
        }
    }
}
