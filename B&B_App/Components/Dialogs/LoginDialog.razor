@using B_B_ClassLibrary.BusinessModels;
<div class="modal fade show" id="myModal" style="display:block; position:relative; z-index:3;"   aria-modal="true" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Login</h4>
                <button type="button" class="close" @onclick="ModalCancel">&times;</button>
            </div>
            <div class="modal-body">
                <form>
                    <MudTextField @bind-Value="User.Email" Variant="Variant.Filled" Placeholder="Username" For="@(() => User.Email)" DisableUnderLine="true" Margin="Margin.Dense"></MudTextField>
                    <MudTextField @bind-Value="User.Password" Variant="Variant.Filled" InputType="InputType.Password" Placeholder="Password" For="@(() => User.Password)" DisableUnderLine="true" Margin="Margin.Dense"></MudTextField>
                </form>

            </div>
            <div class="modal-footer">
                @switch (DialogType)
                {
                    case ModalDialogType.Ok:
                        <MudButton ButtonType="ButtonType.Button" Color="Color.Warning" Variant="Variant.Filled" @onclick=@ModalOk>OK</MudButton>
                        break;
                    case ModalDialogType.OkCancel:
                        <MudButton ButtonType="ButtonType.Button" Color="Color.Success" Variant="Variant.Filled" @onclick=@ModalOk>Ok</MudButton>
                        <MudButton ButtonType="ButtonType.Button" Color="Color.Warning" Variant="Variant.Filled" @onclick="@ModalCancel" Style="margin:0px 0px 0px 10px">Cancel</MudButton>
                        break;
                }
            </div>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public User User { get; set; }

    [Parameter]
    public EventCallback<KeyValuePair<bool, User>> OnClose { get; set; }

    [Parameter]
    public ModalDialogType DialogType { get; set; }

    private Task ModalCancel()
    {
        return OnClose.InvokeAsync(new KeyValuePair<bool, User>(false, User));
    }

    private Task ModalOk()
    {
        return OnClose.InvokeAsync(new KeyValuePair<bool, User>(true, User));
    }

    public enum ModalDialogType
    {
        Ok,
        OkCancel,
    }
}
