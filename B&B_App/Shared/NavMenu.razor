@using B_B_App.Components.Dialogs;
@using B_B_ClassLibrary.BusinessModels;
<div class="top-row ps-3 navbar navbar-dark" style="height:15%;">
    <div class="container-fluid">
        @if (logedIn)
        {
            <MudText Color="Color.Info">Welcome @_user.FirstName</MudText>
            <MudButton ButtonType="ButtonType.Button" @onclick="LogOut" Color="Color.Warning">LogOut</MudButton>
        }
        else
        {
            if (loginDialogOpen)
            {
                <LoginDialog User="_user" DialogType="LoginDialog.ModalDialogType.OkCancel" OnClose="loginDialogClose"></LoginDialog>
            }
            <MudText Color="Color.Info">Welcome please login</MudText>

            <MudButton ButtonType="ButtonType.Button" @onclick="Login"  Color="Color.Success">LogIn</MudButton>
        }
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
            @if (logedIn)
            {
                <NavLink class="nav-link" href="/reservations" Match="NavLinkMatch.All">
                    <span class="oi oi-home" aria-hidden="true"></span> Bookings
                </NavLink>

            }
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    private bool loginDialogOpen = false;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private bool logedIn = false;
    private User? _user;

    protected override void OnInitialized()
    {
        if (_user == null)
            _user = new User();

        base.OnInitialized();
    }

    private async Task Login()
    {
        if (_user == null)
            _user = new User();

        loginDialogOpen = true;


        return;
    }

    private async Task LogOut()
    {
        logedIn = false;
        _user = null;
        this.StateHasChanged();
        return;
    }

    private void loginDialogClose(KeyValuePair<bool, User> pair)
    {
        loginDialogOpen = false;
        
        if (pair.Key)
        {
            logedIn = true;    
        }

    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

}
