@page "/"
@inject NavigationManager navi
@inject IRoomService<Room> roomService
@inject IPictureService pictureService
@inject ISnackbar snackbar

<PageTitle>BB.EU</PageTitle>
<div>
    <div>

        <ul>
            @if (_rooms != null)
            {
                @foreach (var room in _rooms)
                {
                    <li class="indigo lighten-5">
                        <!-- #region Room info card -->
                        <div style="display:flex; align-items:center; justify-content:center;">
                            <div style="flex-basis:50%">
                                <MudCard Class="">
                                    <MudCardContent>
                                        <MudText>Rating: @room.Rating</MudText>

                                        <MudRating ReadOnly="true" SelectedValue="@Convert.ToInt32(room.Rating)" />
                                        <MudText>Rum Nr.: @room.Number</MudText>
                                        <MudText>Antal senge: @room.NumberOfBeds</MudText>
                                        <MudText>Pris pr. nat: @room.PricePerNight</MudText>

                                    </MudCardContent>
                                    <MudCardActions Style="align-content:center">
                                        <MudButton @onclick="() => Redirect(room)" Variant="Variant.Text" Color="Color.Primary">Learn More</MudButton>

                                    </MudCardActions>
                                </MudCard>
                            </div>
                            <!-- #region Carousel -->
                            <div style="padding-left:250px; flex-basis:60%">
                                <MudCarousel Class="mud-width-full" Style="height:220px;" ShowArrows="false" ShowBullets="false" AutoCycle="@autocycle" TData="object">
                                    @if (_pictures.ContainsKey(room.Id))
                                    {
                                        @foreach (var item in _pictures[room.Id])
                                        {
                                            <MudCarouselItem Transition="transition" Style="align-items:center">
                                                <MudImage Width="400" Height="220" ObjectFit="ObjectFit.Cover" Src="@item.Base64" Alt="True shit"></MudImage>
                                            </MudCarouselItem>
                                        }
                                    }

                                </MudCarousel>
                            </div>

                            <!-- #endregion -->

                        </div>
                        <MudDivider DividerType="DividerType.Middle" />
                        <!-- #endregion -->

                    </li>
                }
            }

        </ul>

    </div>

</div>


@code
{
    private List<Room>? _rooms;
    bool success;
    private bool arrows = true;
    private bool bullets = true;
    private bool enableSwipeGesture = true;
    private bool autocycle = true;
    private Transition transition = Transition.Fade;
    private Dictionary<int, List<Picture>> _pictures = new Dictionary<int, List<Picture>>();
   
    private PictureManager _pictureManager;
    private ErrorManager _errorManager;

    protected override async Task OnInitializedAsync()
    {
        if (_pictureManager == null)
            _pictureManager = new PictureManager(roomService, pictureService);

        if (_errorManager == null)
            _errorManager = new ErrorManager(snackbar);

        try
        {
            _rooms = await roomService.GetAllRooms();
            _pictures = await _pictureManager.GetPictureList();
        }
        catch (Exception ex)
        {
            var error = ex;
            _errorManager.InfoBar("Error while loading data..", Variant.Text, Severity.Error);
        }

        base.OnInitialized();
    }
    private void Redirect(Room room)
    {
        navi.NavigateTo($"/roomdetails/{room.Id}");
    }

}