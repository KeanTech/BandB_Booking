@page "/roomdetails"
@page "/roomdetails/{roomId:int}"
@inject IRoomService<Room> roomService
@inject ILocationService<Location> locationService
@inject IPictureService pictureService
@inject IDialogService DialogService

<MudCard Class="indigo lighten-5">
    <MudCardHeader>
        <MudText>Rum detalje</MudText>
    </MudCardHeader>

    <MudCardContent>
        <MudRating SelectedValue="@Convert.ToInt16(_room.Rating)" ReadOnly="true" />
    </MudCardContent>

    <MudCardContent>

        <MudText>
            Rum Nr.: @_room.Number
        </MudText>
        <MudText>
            Pris per nat: @_room.PricePerNight kr.
        </MudText>
        <MudText>
            Antal senge: @_room.NumberOfBeds
        </MudText>
        <br />
        <MudButton  OnClick="@(() => OnNewBooking(_room, _location))">Reserver</MudButton>
    </MudCardContent>

    <MudCardContent>
        <MudGrid>
            @foreach (var item in roomPictures)
            {
                <MudItem xs="3">
                    <MudPaper Class="d-flex align-center justify-center mud-width-full py-8 indigo darken-5"><MudImage Src="@item.Base64" Height="250" Width="300"></MudImage></MudPaper>
                </MudItem>
            }
        </MudGrid>
    </MudCardContent>
</MudCard>

<MudCard Class="indigo lighten-5">
    <MudCardHeader>
        <MudText>Info om stedet</MudText>
    </MudCardHeader>

    <MudCardContent>
        <MudRating SelectedValue="@Convert.ToInt16(_location.Rating)" ReadOnly="true" />
    </MudCardContent>

    <MudCardContent>

        <MudText>
            Navn: @_location.Name
        </MudText>
        <MudText>
            Område: @_location.Area
        </MudText>
        <MudText>
            By: @_location.City
        </MudText>
        <MudText>
            Adresse: @_location.Address
        </MudText>
        <MudText>
            Postnr.: @_location.ZipCode
        </MudText>
        <MudText>
            Land: @_location.Country
        </MudText>
        <MudText>
            Antal værelser: @_location.AmountOfRooms
        </MudText>

    </MudCardContent>
    <MudDivider DividerType="DividerType.Middle" Light="false"></MudDivider>
    <MudCardContent>
        <MudGrid>
            @foreach (var item in locationPictures)
            {
                <MudItem xs="3">
                    <MudPaper Class="d-flex align-center justify-center mud-width-full py-8 indigo darken-5"><MudImage Src="@item.Base64" Height="250" Width="300"></MudImage></MudPaper>
                </MudItem>
            }
        </MudGrid>
    </MudCardContent>
</MudCard>

@code {
    // Used as a roomId to pass in the url
    [Parameter]
    public int? roomId { get; set; }

    private Room _room = new Room();
    private Location _location = new Location();
    private List<Picture> roomPictures = new List<Picture>();
    private List<Picture> locationPictures = new List<Picture>();


    private void OnNewBooking(Room room, Location location)
    {
        var parameters = new DialogParameters();
        parameters.Add("Room", room);
        parameters.Add("Location", location);

        var options = new DialogOptions { CloseOnEscapeKey = true, MaxWidth = MaxWidth.Medium };
        var result = DialogService.Show<NewBookingDialog>("Ny reservation", parameters, options);
    }

    protected override async Task OnInitializedAsync()
    {
        if (roomId == null)
            return;

        // Get room from service
        // Use roomId to get the selected room
        try
        {
            if (roomId != null)
                _room = await roomService.Get(roomId.Value);
            // Get location for the room
            _location = await locationService.Get(_room.LocationId);

            roomPictures = await pictureService.GetRoomPictures(_room.Id);
            locationPictures = await pictureService.GetLocationPictures(_location.Id);
        }
        catch (Exception ex)
        {
            // should be an errorlog
            var error = ex;
        }


        base.OnInitialized();
    }

}
